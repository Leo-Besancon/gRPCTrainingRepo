// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/api.proto

package calculator

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Addition struct {
	FirstNum             int64    `protobuf:"varint,1,opt,name=firstNum,proto3" json:"firstNum,omitempty"`
	SecondNum            int64    `protobuf:"varint,2,opt,name=secondNum,proto3" json:"secondNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addition) Reset()         { *m = Addition{} }
func (m *Addition) String() string { return proto.CompactTextString(m) }
func (*Addition) ProtoMessage()    {}
func (*Addition) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{0}
}

func (m *Addition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addition.Unmarshal(m, b)
}
func (m *Addition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addition.Marshal(b, m, deterministic)
}
func (m *Addition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addition.Merge(m, src)
}
func (m *Addition) XXX_Size() int {
	return xxx_messageInfo_Addition.Size(m)
}
func (m *Addition) XXX_DiscardUnknown() {
	xxx_messageInfo_Addition.DiscardUnknown(m)
}

var xxx_messageInfo_Addition proto.InternalMessageInfo

func (m *Addition) GetFirstNum() int64 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *Addition) GetSecondNum() int64 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

type AdditionRequest struct {
	Add                  *Addition `protobuf:"bytes,1,opt,name=add,proto3" json:"add,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AdditionRequest) Reset()         { *m = AdditionRequest{} }
func (m *AdditionRequest) String() string { return proto.CompactTextString(m) }
func (*AdditionRequest) ProtoMessage()    {}
func (*AdditionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{1}
}

func (m *AdditionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionRequest.Unmarshal(m, b)
}
func (m *AdditionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionRequest.Marshal(b, m, deterministic)
}
func (m *AdditionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionRequest.Merge(m, src)
}
func (m *AdditionRequest) XXX_Size() int {
	return xxx_messageInfo_AdditionRequest.Size(m)
}
func (m *AdditionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionRequest proto.InternalMessageInfo

func (m *AdditionRequest) GetAdd() *Addition {
	if m != nil {
		return m.Add
	}
	return nil
}

type AdditionResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionResponse) Reset()         { *m = AdditionResponse{} }
func (m *AdditionResponse) String() string { return proto.CompactTextString(m) }
func (*AdditionResponse) ProtoMessage()    {}
func (*AdditionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{2}
}

func (m *AdditionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionResponse.Unmarshal(m, b)
}
func (m *AdditionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionResponse.Marshal(b, m, deterministic)
}
func (m *AdditionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionResponse.Merge(m, src)
}
func (m *AdditionResponse) XXX_Size() int {
	return xxx_messageInfo_AdditionResponse.Size(m)
}
func (m *AdditionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionResponse proto.InternalMessageInfo

func (m *AdditionResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Decomposition struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Decomposition) Reset()         { *m = Decomposition{} }
func (m *Decomposition) String() string { return proto.CompactTextString(m) }
func (*Decomposition) ProtoMessage()    {}
func (*Decomposition) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{3}
}

func (m *Decomposition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decomposition.Unmarshal(m, b)
}
func (m *Decomposition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decomposition.Marshal(b, m, deterministic)
}
func (m *Decomposition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decomposition.Merge(m, src)
}
func (m *Decomposition) XXX_Size() int {
	return xxx_messageInfo_Decomposition.Size(m)
}
func (m *Decomposition) XXX_DiscardUnknown() {
	xxx_messageInfo_Decomposition.DiscardUnknown(m)
}

var xxx_messageInfo_Decomposition proto.InternalMessageInfo

func (m *Decomposition) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type DecompositionRequest struct {
	Decomp               *Decomposition `protobuf:"bytes,1,opt,name=decomp,proto3" json:"decomp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DecompositionRequest) Reset()         { *m = DecompositionRequest{} }
func (m *DecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*DecompositionRequest) ProtoMessage()    {}
func (*DecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{4}
}

func (m *DecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionRequest.Unmarshal(m, b)
}
func (m *DecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionRequest.Marshal(b, m, deterministic)
}
func (m *DecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionRequest.Merge(m, src)
}
func (m *DecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_DecompositionRequest.Size(m)
}
func (m *DecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionRequest proto.InternalMessageInfo

func (m *DecompositionRequest) GetDecomp() *Decomposition {
	if m != nil {
		return m.Decomp
	}
	return nil
}

type DecompositionResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositionResponse) Reset()         { *m = DecompositionResponse{} }
func (m *DecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*DecompositionResponse) ProtoMessage()    {}
func (*DecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{5}
}

func (m *DecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionResponse.Unmarshal(m, b)
}
func (m *DecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionResponse.Marshal(b, m, deterministic)
}
func (m *DecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionResponse.Merge(m, src)
}
func (m *DecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_DecompositionResponse.Size(m)
}
func (m *DecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionResponse proto.InternalMessageInfo

func (m *DecompositionResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Average struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Average) Reset()         { *m = Average{} }
func (m *Average) String() string { return proto.CompactTextString(m) }
func (*Average) ProtoMessage()    {}
func (*Average) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{6}
}

func (m *Average) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Average.Unmarshal(m, b)
}
func (m *Average) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Average.Marshal(b, m, deterministic)
}
func (m *Average) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Average.Merge(m, src)
}
func (m *Average) XXX_Size() int {
	return xxx_messageInfo_Average.Size(m)
}
func (m *Average) XXX_DiscardUnknown() {
	xxx_messageInfo_Average.DiscardUnknown(m)
}

var xxx_messageInfo_Average proto.InternalMessageInfo

func (m *Average) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type AverageRequest struct {
	Avg                  *Average `protobuf:"bytes,1,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{7}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetAvg() *Average {
	if m != nil {
		return m.Avg
	}
	return nil
}

type AverageResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{8}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Maximum struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Maximum) Reset()         { *m = Maximum{} }
func (m *Maximum) String() string { return proto.CompactTextString(m) }
func (*Maximum) ProtoMessage()    {}
func (*Maximum) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{9}
}

func (m *Maximum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Maximum.Unmarshal(m, b)
}
func (m *Maximum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Maximum.Marshal(b, m, deterministic)
}
func (m *Maximum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Maximum.Merge(m, src)
}
func (m *Maximum) XXX_Size() int {
	return xxx_messageInfo_Maximum.Size(m)
}
func (m *Maximum) XXX_DiscardUnknown() {
	xxx_messageInfo_Maximum.DiscardUnknown(m)
}

var xxx_messageInfo_Maximum proto.InternalMessageInfo

func (m *Maximum) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type MaximumRequest struct {
	Max                  *Maximum `protobuf:"bytes,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumRequest) Reset()         { *m = MaximumRequest{} }
func (m *MaximumRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumRequest) ProtoMessage()    {}
func (*MaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{10}
}

func (m *MaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumRequest.Unmarshal(m, b)
}
func (m *MaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumRequest.Marshal(b, m, deterministic)
}
func (m *MaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumRequest.Merge(m, src)
}
func (m *MaximumRequest) XXX_Size() int {
	return xxx_messageInfo_MaximumRequest.Size(m)
}
func (m *MaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumRequest proto.InternalMessageInfo

func (m *MaximumRequest) GetMax() *Maximum {
	if m != nil {
		return m.Max
	}
	return nil
}

type MaximumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumResponse) Reset()         { *m = MaximumResponse{} }
func (m *MaximumResponse) String() string { return proto.CompactTextString(m) }
func (*MaximumResponse) ProtoMessage()    {}
func (*MaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa044365e19b2ea, []int{11}
}

func (m *MaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumResponse.Unmarshal(m, b)
}
func (m *MaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumResponse.Marshal(b, m, deterministic)
}
func (m *MaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumResponse.Merge(m, src)
}
func (m *MaximumResponse) XXX_Size() int {
	return xxx_messageInfo_MaximumResponse.Size(m)
}
func (m *MaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumResponse proto.InternalMessageInfo

func (m *MaximumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Addition)(nil), "calculator.Addition")
	proto.RegisterType((*AdditionRequest)(nil), "calculator.AdditionRequest")
	proto.RegisterType((*AdditionResponse)(nil), "calculator.AdditionResponse")
	proto.RegisterType((*Decomposition)(nil), "calculator.Decomposition")
	proto.RegisterType((*DecompositionRequest)(nil), "calculator.DecompositionRequest")
	proto.RegisterType((*DecompositionResponse)(nil), "calculator.DecompositionResponse")
	proto.RegisterType((*Average)(nil), "calculator.Average")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
	proto.RegisterType((*Maximum)(nil), "calculator.Maximum")
	proto.RegisterType((*MaximumRequest)(nil), "calculator.MaximumRequest")
	proto.RegisterType((*MaximumResponse)(nil), "calculator.MaximumResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdditionServiceClient is the client API for AdditionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdditionServiceClient interface {
	Add(ctx context.Context, in *AdditionRequest, opts ...grpc.CallOption) (*AdditionResponse, error)
}

type additionServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdditionServiceClient(cc *grpc.ClientConn) AdditionServiceClient {
	return &additionServiceClient{cc}
}

func (c *additionServiceClient) Add(ctx context.Context, in *AdditionRequest, opts ...grpc.CallOption) (*AdditionResponse, error) {
	out := new(AdditionResponse)
	err := c.cc.Invoke(ctx, "/calculator.AdditionService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdditionServiceServer is the server API for AdditionService service.
type AdditionServiceServer interface {
	Add(context.Context, *AdditionRequest) (*AdditionResponse, error)
}

func RegisterAdditionServiceServer(s *grpc.Server, srv AdditionServiceServer) {
	s.RegisterService(&_AdditionService_serviceDesc, srv)
}

func _AdditionService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.AdditionService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionServiceServer).Add(ctx, req.(*AdditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdditionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.AdditionService",
	HandlerType: (*AdditionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _AdditionService_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/api.proto",
}

// DecompositionServiceClient is the client API for DecompositionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecompositionServiceClient interface {
	Decomp(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (DecompositionService_DecompClient, error)
}

type decompositionServiceClient struct {
	cc *grpc.ClientConn
}

func NewDecompositionServiceClient(cc *grpc.ClientConn) DecompositionServiceClient {
	return &decompositionServiceClient{cc}
}

func (c *decompositionServiceClient) Decomp(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (DecompositionService_DecompClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DecompositionService_serviceDesc.Streams[0], "/calculator.DecompositionService/Decomp", opts...)
	if err != nil {
		return nil, err
	}
	x := &decompositionServiceDecompClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DecompositionService_DecompClient interface {
	Recv() (*DecompositionResponse, error)
	grpc.ClientStream
}

type decompositionServiceDecompClient struct {
	grpc.ClientStream
}

func (x *decompositionServiceDecompClient) Recv() (*DecompositionResponse, error) {
	m := new(DecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DecompositionServiceServer is the server API for DecompositionService service.
type DecompositionServiceServer interface {
	Decomp(*DecompositionRequest, DecompositionService_DecompServer) error
}

func RegisterDecompositionServiceServer(s *grpc.Server, srv DecompositionServiceServer) {
	s.RegisterService(&_DecompositionService_serviceDesc, srv)
}

func _DecompositionService_Decomp_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DecompositionServiceServer).Decomp(m, &decompositionServiceDecompServer{stream})
}

type DecompositionService_DecompServer interface {
	Send(*DecompositionResponse) error
	grpc.ServerStream
}

type decompositionServiceDecompServer struct {
	grpc.ServerStream
}

func (x *decompositionServiceDecompServer) Send(m *DecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DecompositionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.DecompositionService",
	HandlerType: (*DecompositionServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Decomp",
			Handler:       _DecompositionService_Decomp_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/api.proto",
}

// AverageServiceClient is the client API for AverageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AverageServiceClient interface {
	Avg(ctx context.Context, opts ...grpc.CallOption) (AverageService_AvgClient, error)
}

type averageServiceClient struct {
	cc *grpc.ClientConn
}

func NewAverageServiceClient(cc *grpc.ClientConn) AverageServiceClient {
	return &averageServiceClient{cc}
}

func (c *averageServiceClient) Avg(ctx context.Context, opts ...grpc.CallOption) (AverageService_AvgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AverageService_serviceDesc.Streams[0], "/calculator.AverageService/Avg", opts...)
	if err != nil {
		return nil, err
	}
	x := &averageServiceAvgClient{stream}
	return x, nil
}

type AverageService_AvgClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type averageServiceAvgClient struct {
	grpc.ClientStream
}

func (x *averageServiceAvgClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *averageServiceAvgClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AverageServiceServer is the server API for AverageService service.
type AverageServiceServer interface {
	Avg(AverageService_AvgServer) error
}

func RegisterAverageServiceServer(s *grpc.Server, srv AverageServiceServer) {
	s.RegisterService(&_AverageService_serviceDesc, srv)
}

func _AverageService_Avg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AverageServiceServer).Avg(&averageServiceAvgServer{stream})
}

type AverageService_AvgServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type averageServiceAvgServer struct {
	grpc.ServerStream
}

func (x *averageServiceAvgServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *averageServiceAvgServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AverageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.AverageService",
	HandlerType: (*AverageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Avg",
			Handler:       _AverageService_Avg_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/api.proto",
}

// MaximumServiceClient is the client API for MaximumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaximumServiceClient interface {
	Max(ctx context.Context, opts ...grpc.CallOption) (MaximumService_MaxClient, error)
}

type maximumServiceClient struct {
	cc *grpc.ClientConn
}

func NewMaximumServiceClient(cc *grpc.ClientConn) MaximumServiceClient {
	return &maximumServiceClient{cc}
}

func (c *maximumServiceClient) Max(ctx context.Context, opts ...grpc.CallOption) (MaximumService_MaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MaximumService_serviceDesc.Streams[0], "/calculator.MaximumService/Max", opts...)
	if err != nil {
		return nil, err
	}
	x := &maximumServiceMaxClient{stream}
	return x, nil
}

type MaximumService_MaxClient interface {
	Send(*MaximumRequest) error
	Recv() (*MaximumResponse, error)
	grpc.ClientStream
}

type maximumServiceMaxClient struct {
	grpc.ClientStream
}

func (x *maximumServiceMaxClient) Send(m *MaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maximumServiceMaxClient) Recv() (*MaximumResponse, error) {
	m := new(MaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaximumServiceServer is the server API for MaximumService service.
type MaximumServiceServer interface {
	Max(MaximumService_MaxServer) error
}

func RegisterMaximumServiceServer(s *grpc.Server, srv MaximumServiceServer) {
	s.RegisterService(&_MaximumService_serviceDesc, srv)
}

func _MaximumService_Max_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaximumServiceServer).Max(&maximumServiceMaxServer{stream})
}

type MaximumService_MaxServer interface {
	Send(*MaximumResponse) error
	Recv() (*MaximumRequest, error)
	grpc.ServerStream
}

type maximumServiceMaxServer struct {
	grpc.ServerStream
}

func (x *maximumServiceMaxServer) Send(m *MaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maximumServiceMaxServer) Recv() (*MaximumRequest, error) {
	m := new(MaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MaximumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.MaximumService",
	HandlerType: (*MaximumServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Max",
			Handler:       _MaximumService_Max_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/api.proto",
}

func init() { proto.RegisterFile("calculator/api.proto", fileDescriptor_aaa044365e19b2ea) }

var fileDescriptor_aaa044365e19b2ea = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcb, 0x4f, 0xf2, 0x40,
	0x14, 0xc5, 0xbf, 0x7e, 0x4d, 0x2a, 0x5e, 0x1f, 0x90, 0x11, 0x8d, 0x02, 0x0b, 0x98, 0x44, 0x83,
	0x2e, 0x00, 0xeb, 0xc2, 0xb8, 0x84, 0xb0, 0x71, 0x81, 0x89, 0xf8, 0x58, 0xb8, 0x1b, 0x3b, 0x23,
	0x69, 0x42, 0x3b, 0xb5, 0xaf, 0xf0, 0xe7, 0x9b, 0xb6, 0x33, 0xd3, 0x96, 0x8c, 0xb8, 0xa3, 0xf7,
	0x9c, 0x7b, 0xee, 0x8f, 0xb9, 0x33, 0xd0, 0x76, 0xc8, 0xda, 0x49, 0xd6, 0x24, 0xe6, 0xe1, 0x98,
	0x04, 0xee, 0x28, 0x08, 0x79, 0xcc, 0x11, 0x94, 0x55, 0x3c, 0x87, 0xc6, 0x94, 0x52, 0x37, 0x76,
	0xb9, 0x8f, 0x3a, 0xd0, 0xf8, 0x72, 0xc3, 0x28, 0x7e, 0x4a, 0xbc, 0x73, 0xa3, 0x6f, 0x0c, 0xcd,
	0xa5, 0xfa, 0x46, 0x3d, 0xd8, 0x8f, 0x98, 0xc3, 0x7d, 0x9a, 0x89, 0xff, 0x73, 0xb1, 0x2c, 0xe0,
	0x07, 0x68, 0xca, 0x94, 0x25, 0xfb, 0x4e, 0x58, 0x14, 0xa3, 0x2b, 0x30, 0x09, 0xa5, 0x79, 0xce,
	0x81, 0xdd, 0x1e, 0x95, 0x23, 0x47, 0xca, 0x99, 0x19, 0xf0, 0x0d, 0xb4, 0xca, 0xd6, 0x28, 0xe0,
	0x7e, 0xc4, 0xd0, 0x19, 0x58, 0x21, 0x8b, 0x92, 0x75, 0x2c, 0x30, 0xc4, 0x17, 0x1e, 0xc0, 0xd1,
	0x9c, 0x39, 0xdc, 0x0b, 0x78, 0x54, 0x10, 0xb7, 0xc0, 0xf4, 0x15, 0x6c, 0xf6, 0x13, 0x3f, 0x42,
	0xbb, 0x66, 0x91, 0x38, 0xb7, 0x60, 0xd1, 0xbc, 0x2e, 0x88, 0x2e, 0xaa, 0x44, 0xf5, 0x0e, 0x61,
	0xc4, 0x63, 0x38, 0xdd, 0x8a, 0xfa, 0x03, 0xaf, 0x0b, 0x7b, 0xd3, 0x94, 0x85, 0x64, 0xc5, 0x34,
	0x60, 0xf7, 0x70, 0x2c, 0x44, 0x89, 0x74, 0x09, 0x26, 0x49, 0x57, 0x82, 0xe7, 0xa4, 0x76, 0x42,
	0xc2, 0x98, 0xe9, 0xf8, 0x1a, 0x9a, 0xaa, 0x51, 0x0b, 0x60, 0x54, 0x01, 0x16, 0x64, 0xe3, 0x7a,
	0x89, 0xa7, 0x07, 0x10, 0x62, 0x05, 0xc0, 0x23, 0x1b, 0x1d, 0x80, 0x34, 0x66, 0x7a, 0x06, 0xa0,
	0x1a, 0x77, 0x9f, 0x80, 0xfd, 0x56, 0xde, 0x83, 0x17, 0x16, 0xa6, 0xae, 0xc3, 0xd0, 0x0c, 0xcc,
	0x29, 0xa5, 0xa8, 0xab, 0xbd, 0x01, 0x05, 0x48, 0xa7, 0xa7, 0x17, 0x8b, 0x61, 0xf8, 0x9f, 0xed,
	0x6e, 0x2d, 0x55, 0x66, 0x3f, 0x83, 0x55, 0xd4, 0x51, 0xff, 0xf7, 0x75, 0x8a, 0x19, 0x83, 0x1d,
	0x0e, 0x39, 0x68, 0x62, 0xd8, 0xaf, 0x6a, 0x4d, 0xd5, 0x3f, 0x90, 0xae, 0x50, 0x47, 0xb7, 0x20,
	0x91, 0xdd, 0xd5, 0x6a, 0x32, 0x75, 0x68, 0xd8, 0xef, 0xea, 0xec, 0x65, 0xea, 0x1c, 0xcc, 0x05,
	0xd9, 0xd4, 0x53, 0xeb, 0xeb, 0xa9, 0xa7, 0x6e, 0x6d, 0x20, 0x4b, 0x9d, 0x18, 0xb3, 0xc3, 0x8f,
	0xca, 0x5b, 0xfe, 0xb4, 0xf2, 0xe7, 0x7d, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xf3, 0x57,
	0xc2, 0xf6, 0x03, 0x00, 0x00,
}
